@model BL.Discussions.Discussion

@{
    ViewBag.Title = string.Format("Discussion '{0}'", Model.Title);
    Layout = "~/Views/Shared/Layout.cshtml";
}

<h1 class="text-center page-header">@Model.Title</h1>

<div id="chat-container" style="border: 1px solid red;">
    <div id="msg-container"></div>

    <div id="msg-controls">
        <div class="text-center">
            <ul id="pages" class="pagination pagination-sm">
                <li id="page-prev"><a href="#" onclick="if (!$('#page-prev').hasClass('disabled')) {onPageSelect(parseInt($('#pages .active a').text())-1);}">&laquo;</a></li>
                @{
                    const int messagesOnPage = 2;
                    var pagesNumber = Model.Messages.Count/messagesOnPage + (Model.Messages.Count%messagesOnPage == 0 ? 0 : 1);
                    for (var i = 1; i <= pagesNumber; i++)
                    {
                        <text><li id="page-@(i)"><a href="#" onclick="onPageSelect(@(i));">@i</a></li></text>
                    }
                }
                <li id="page-next"><a href="#" onclick="if (!$('#page-next').hasClass('disabled')) {onPageSelect(parseInt($('#pages .active a').text())+1);}">&raquo;</a></li>
            </ul>
        </div>

        @if (User.IsInRole("Write Forum"))
        {
            <div class="">
                @Html.TextArea("message", new {@class = "form-control", rows = 3, id = "msg-area"})
                <button id="btn-send" class="btn btn-info" onclick="sendMessage(@Model.Id, $('#msg-area').val(), '@Url.Action("SendMessage")')" style="margin-top: 10px">Send</button>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    function onPageSelect(number) {
        if (typeof(this.selectedPage) != "undefined") {
            if (this.selectedPage == number) {
                return;
            }
            $('#page-' + this.selectedPage).removeClass('active');
        }
        this.selectedPage = number;
        $('#page-' + number).addClass('active');
        if (number == 1) {
            $('#page-prev').addClass('disabled');
        } else {
            $('#page-prev').removeClass('disabled');
        }
        if (number == @(pagesNumber)) {
            $('#page-next').addClass('disabled');
        } else {
            $('#page-next').removeClass('disabled');
        }

        $('#msg-container').empty();
        var options = {
            url: '@Url.Action("GetMessages")',
            data: {
                discussionId: @(Model.Id),
                offset: @(messagesOnPage) * (number-1),
                count: @(messagesOnPage)
            },
            success: function(messages) {
                messages.forEach(viewMessage);
            }
        };
        $.ajax(options);
    };
</script>

<script type="text/javascript">
    function setChatHeight() {
        var p = $('#chat-container').position();
        var h = window.innerHeight;
        var chatContainerH = h - p.top - 10;
        $('#chat-container').css('height', chatContainerH + 'px');

        var msgContainerH = chatContainerH - $('#msg-controls')[0].clientHeight;

        $('#msg-container').css('height', msgContainerH + 'px');
    };

    $(function() {
        setChatHeight();
        $(window).on('resize', setChatHeight);
    });
</script>

<script type="text/javascript">
    lastMsgId = 0;

    $(function() {
        $('#msg-area').keydown(function(event) {
            var enterKey = 13;
            if (event.which == enterKey) {
                $('#btn-send').click();
            }
        });
        setInterval(viewAllMessages, 1000);
    });

    function viewAllMessages() {
        var options = {
            url: '@Url.Action("GetAllMessages")',
            data: { discussionId: @Model.Id, lastMsgId: lastMsgId },
            cache: false,
            success: function(data) {
                data.forEach(viewMessage);
            }
        };
        $.ajax(options);
    }

    function viewMessage(msg) {
        if (typeof (msg) == "undefined") {
            return;
        }
        var msgContainer = $('#msg-container');
        var msgDiv = $(document.createElement('div')).addClass('msg-div');
        msgDiv.append($(document.createElement('div')).addClass('msg-id').addClass('hidden').append(msg.Id));
        var avatarPath = '@(Url.Content("~/Pictures/Avatars/"))' + msg.Author.Avatar;
        msgDiv.append($(document.createElement('div'))
            .addClass('msg-user')
            .append($(document.createElement('img'))
                .attr('src', avatarPath)
                .attr('width', '100%')
                .addClass('img-rounded')
            )
        );

        var msgDate = $(document.createElement('div'))
            .addClass('msg-date')
            .addClass('small');
        if (@(User.IsInRole("Write Forum").ToString().ToLower()) && msg.Author.Id == @(User.Id)) {
            msgDate.append($(document.createElement('span'))
                .addClass('clickable')
                .addClass('glyphicon')
                .addClass('glyphicon-remove')
                .addClass('pull-right')
                .click(function() {
                    removeMessage(@Model.Id, $(this).parentsUntil('.msg-div').parent(),
                        '@Url.Action("RemoveMessage")');
                }));
        }
        msgDate.append($(document.createElement('div'))
            .addClass('text-center text-muted')
            .append(msg.Date));

        msgDiv.append(msgDate);
        msgDiv.append($(document.createElement('div')).addClass('msg-body').append($(document.createElement('div'))
            .append($(document.createElement('b')).addClass('text-info').append(msg.Author.Login).append('<br/>'))
            .append(msg.Body)));

        msgContainer.append(msgDiv);

        if (lastMsgId < msg.Id) {
            lastMsgId = msg.Id;
        }
    }

    function sendMessage(discussionId, msg, url) {
        var options = {
            url: url,
            method: 'POST',
            data: {
                discussionId: discussionId,
                message: msg
            },
            success: function(data) {
                $('#msg-area').val('');
                viewMessage(data.message);
            }
        };
        $.ajax(options);
    }

    function getMessages(discussionId, url) {
        var options = {
            url: url,
            data: {discussionId: discussionId},
            method: 'POST',
            success: function(data) {
                alert('recieved');
            }
        };
        $.ajax(options);
    }

    function removeMessage(discussionId, messageRow, url) {
        var messageId = messageRow.children('.msg-id').first().text();
        var options = {
            url: url,
            data: { discussionId: discussionId, messageId: messageId },
            method: 'POST',
            success: function(data) {
                if (typeof (data.result) != "undefined" && data.result == "success") {
                    messageRow.remove();
                }
            }
        };
        $.ajax(options);
    }
</script>
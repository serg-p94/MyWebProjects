@using System
@using System.Activities.Expressions
@using MvcCalculator.Helper;
@using MvcCalculator.Models;
@using System.Collections;

@model Movie

@{
    Layout = "~/Views/Shared/_Main.cshtml";
    ViewBag.Title = "Add Movie";
}

<h2>Add Movie</h2>

@using (Html.BeginForm("Add", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Title", new{ @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBox("title", string.Empty, new { @class = "form-control", placeholder = "Title", @required="" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Release Date", new{ @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBox("releaseDate", string.Empty, new { @class = "form-control datepicker", placeholder = "Release Date", @required="" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Genre", new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @{
                    var genres = Enum.GetNames(typeof (MovieGenre));
                    var selList = new SelectListItem[genres.Length];
                    for (int i = 0; i < genres.Length; i++)
                    {
                        selList[i] = new SelectListItem() {Text = genres[i], Value = genres[i]};
                    }
                }
                @Html.DropDownList("genre", selList, new { @class = "form-control" })
            </div>
        </div>
    </div>
    
    <div class="row" style="margin-bottom: 15px">
        <div class="col-sm-2">
            @Html.Label("Actors", new { @class = "pull-right control-label" })
        </div>
        <div class="col-sm-5">
            @Html.TextArea("actors", string.Empty, new
            {
                @id = "inputActors",
                @class = "ui-droppable form-control",
                @readonly = "true",
                @style = "height: 250px"
            })
        </div>
        <div class="col-sm-5">
            <ul id="actorsList" data-spy="scroll" class="scroll-area ui-sortable list-droppable form-control">
                
            </ul>
            <div class="btn-group btn-group-justified">
                <div class="btn-group">
                    <button type="button" class="btn btn-default"
                            data-toggle="modal" data-target="#addActorModal">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                </div>
                <div class="btn-group">
                    <button type="button" class="btn btn-default"
                            onclick="refreshActors()">
                        <span class="glyphicon glyphicon-refresh"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Description", new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.TextArea("description", null, new { @class = "form-control", placeholder = "Description", @required = "" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Cover", new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                <input name="cover" type="file" required=""/>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-default">Add</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(refreshActors);
</script>

<!-- Modal -->
<div class="modal fade" id="addActorModal" tabindex="-1" role="dialog" aria-labelledby="addActorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="addActorModalLabel">Add Actor</h4>
            </div>

            <div class="modal-body">
                
                <h4 id="addActorResult">
                    
                </h4>

                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Name</label>
                        <div class="col-sm-10">
                            @Html.TextBox("name", null, new
                            {
                                @id = "actorName",
                                @class = "form-control",
                                @placeholder = "Name",
                                @required = ""
                            })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">Surname</label>
                        <div class="col-sm-10">
                            @Html.TextBox("surname", null, new
                            {
                                @id = "actorSurname",
                                @class = "form-control",
                                @placeholder = "Surname",
                                @required = ""
                            })
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="addActor($('#actorName').val(), $('#actorSurname').val())">Add</button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function addActor(name, surname) {
        var res = $('#addActorResult');
        if (name == '' || surname == '') {
            res.fadeOut(400, function () {
                res.removeClass();
                res.html('You can\'t add actor with empty field.');
                res.addClass('alert text-center alert-success');
            });
            res.fadeIn(1000);
            return;
        }
        $.ajax('/Movie/AddActorAjax', {
            type: 'POST',
            data: { name: name, surname: surname },
            success: function (data) {
                switch (data.Result.toString()) {
                    case '@ActorAddingResult.Success.ToString("D")':
                        $('#actorsList').append(
                        '<li class="ui-state-default text-center" style="color: green; cursor: pointer"><label style="cursor: pointer">'
                        + surname + ", " + name + '</label></li>');
                        res.fadeOut(400, function () {
                            res.removeClass();
                            res.html('Actor ' + data.Actor.Name + ' ' + data.Actor.Surname + ' was added.');
                            res.addClass('alert text-center alert-success');
                        });
                        res.fadeIn(1000);
                        break;
                    case '@ActorAddingResult.AlreadyExists.ToString("D")':
                        res.fadeOut(400, function () {
                            res.removeClass();
                            res.html('Actor ' + data.Actor.Name + ' ' + data.Actor.Surname + ' already exists.');
                            res.addClass('alert text-center alert-danger');
                        });
                        res.fadeIn(1000);
                        break;
                    default:
                        res.removeClass();
                        res.html('');
                        break;
                }
            }
        });
    }
</script>
@using System.Net.Http
@using System.Security.Policy
@model IQueryable<BusinessLogic.MonitoringMemory.MemoryState>

@{
    Layout = "../Layout.cshtml";
    ViewBag.Title = "Memory Statistics";
}

<div class="ui-widget draggable paint-area-widget">
    <div class="ui-widget-header text-center">Memory Statistics</div>
    <div class="ui-widget-content">
        <div class="form-group form-inline">
            @Html.DropDownList("columnsNumber",
           new[] {
            new SelectListItem(){Text="5"},
            new SelectListItem(){Text="10"},
            new SelectListItem(){Text="20"},
            new SelectListItem(){Text="50"}
           }, new { @class = "form-control" }
        )
            <button class="btn btn-default" onclick="painterMemory.lastPaintedId = 0; setInterval(AddFromDb, painterMemory.period);">Start</button>
        </div>
        <div id="memory-area" class="paint-area"></div>
    </div>
</div>

<script type="text/javascript">
    var combo = $('#columnsNumber')[0];
    function UpdateColumnsWidth() {

    }
    function SetColumnsWidth(w) {
        $(painterMemory.area).children('.paint-col').css('width', w + '%');
    }
    combo.onchange = function () {
        painterMemory.columnsNumber = combo.value;
        SetColumnsWidth(99.5 / painterMemory.columnsNumber);
    };

    painterMemory = { area: "#memory-area" };
    painterMemory.totalMemory = 4096;
    painterMemory.columnsNumber = combo.value;
    painterMemory.maxHeight = 300;
    painterMemory.period = 1000;
    painterMemory.lastPaintedId = 0;
    painterMemory.animationTime = 500;

    function AddState(state) {
        var nCols = $(painterMemory.area).children('div').length;
        if (typeof (state) == "undefined" || state.Id == painterMemory.lastPaintedId) {
            return;
        }
        
        if (nCols >= painterMemory.columnsNumber)
        {
            RemoveCol(painterMemory.area, nCols - painterMemory.columnsNumber + 1);
        }

        AddCol(painterMemory.area,
            state.AvailableMemoryMb / painterMemory.totalMemory * painterMemory.maxHeight,
            99.5 / painterMemory.columnsNumber)
                .append('<div class="id">' + state.Id + '</div>')
                .append('<div class="available">' + state.AvailableMemoryMb + '</div>');
        painterMemory.lastPaintedId = state.Id;
    }

    function AddFromDb() {
        var colsAdded = $('#memory-area > div').length;
        var limit = 1;
        var options = {
            success: function (data) {
                data.value.forEach(AddState);
            },
            url: "http://localhost:15103/odata/Memory?$orderby=Date&$top=" + limit
                + "&$filter=Id gt " + painterMemory.lastPaintedId
        };
        $.ajax(options);
    }
</script>